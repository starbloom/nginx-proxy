[req]
default_bits        = 2048
default_keyfile     = server-key.pem
req_extensions      = req_ext
x509_extensions     = x509_ext
string_mask         = utf8only
distinguished_name = req_distinguished_name
prompt = no

# The Subject DN can be formed using X501 or RFC 4514 (see RFC 4519 for a description).
#   It's sort of a mashup. For example, RFC 4514 does not provide emailAddress.
[req_distinguished_name]
C = US
ST = Virginia
L = Fairfax
O = Fairfax
OU = Fairfax
CN = localhost
commonName          = localhost

emailAddress            = admin@localhost.org

# Section x509_ext is used when generating a self-signed certificate. I.e., openssl req -x509 ...
[x509_ext]

subjectKeyIdentifier        = hash
authorityKeyIdentifier  = keyid,issuer

#  If RSA Key Transport bothers you, then remove keyEncipherment. TLS 1.3 is removing RSA
#  Key Transport in favor of exchanges with Forward Secrecy, like DHE and ECDHE.
basicConstraints        = CA:FALSE
keyUsage            = digitalSignature, keyEncipherment
subjectAltName          = @alternate_names
nsComment           = "Fairfax Self Signed Certs"

# RFC 5280, Section 4.2.1.12 makes EKU optional
# CA/Browser Baseline Requirements, Appendix (B)(3)(G) makes me confused
# extendedKeyUsage  = serverAuth, clientAuth

# Section req_ext is used when generating a certificate signing request. I.e., openssl req ...
[req_ext]

subjectKeyIdentifier        = hash

basicConstraints        = CA:FALSE
keyUsage            = digitalSignature, keyEncipherment
subjectAltName          = @alternate_names
nsComment           = "OpenSSL Generated Certificate"

# RFC 5280, Section 4.2.1.12 makes EKU optional
# CA/Browser Baseline Requirements, Appendix (B)(3)(G) makes me confused
# extendedKeyUsage  = serverAuth, clientAuth

[alternate_names]

DNS.1       = localhost
DNS.2       = 127.0.0.1
DNS.3       = ::1
DNS.4       = fe80::1
